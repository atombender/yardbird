#!/usr/bin/env ruby

require 'mercenary'

require_relative '../lib/yardbird'

Mercenary.program(:yardbird) do |p|
  p.version Yardbird::VERSION
  p.description 'Yardbird extracts REST API comments as a Markdown document'
  p.syntax "yardbird <subcommand> [options]"

  p.command :generate do |c|
    c.syntax "generate PATH"
    c.description "Generates from PATH"
    c.option :outfile, '-o TARGET', '--out TARGET', 'Write to TARGET. Defaults to standard output.'
    c.option :section_level, '--start-section LEVEL', 'Begin sections at level LEVEL. Default is 0.', Integer
    c.option :toc, '--toc', 'Include table of contents.', TrueClass
    c.option :title, '--title TITLE', 'Set a title'
    c.option :yaml, '--yaml KEY=VALUE[,KEY=VALUE...]', 'Add YAML headers (for use with Jekyll)', Array
    c.action do |args, options|
      abort "Specify a path." if args.empty?
      if (file = options[:outfile])
        stream = File.open(file, 'w:utf-8')
      else
        stream = $stdout
      end
      generator = Yardbird::Generator.new
      generator.title = options[:title]
      generator.section_level = options[:section_level]
      generator.table_of_contents = options[:toc]
      [options[:yaml]].flatten.each do |s|
        if s =~ /\A(.*)=(.*)\z/
          generator.yaml_headers[$1] = $2
        end
      end
      generator.paths |= args
      generator.generate(stream)
    end
  end
end
